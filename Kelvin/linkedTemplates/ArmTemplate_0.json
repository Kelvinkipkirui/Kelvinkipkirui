{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Kelvin"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"employee_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'employee'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kelvin789.dfs.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kejkvault.vault.azure.net/"
		},
		"employee_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-05NKJI7\\SQLEXPRESS"
		},
		"employee_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Kelvin"
		},
		"employee_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Kelvin"
		},
		"AzureDatabricks1dataengine_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1007-065408-nq2s1zxl"
		},
		"SqlServerall_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-05NKJI7\\SQLEXPRESS"
		},
		"SqlServerall_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Kelvin1"
		},
		"SqlServerall_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kelvin"
		},
		"emptable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-05NKJI7\\SQLEXPRESS"
		},
		"emptable_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Kelvin1"
		},
		"emptable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kelvin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('employee_properties_typeProperties_server')]",
					"database": "[parameters('employee_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('employee_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('employee_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Used to connnect to on prem server",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquettable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().TableName, '.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().SchemaName, '/', dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": "uuyui"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "column1",
						"type": "INT32"
					},
					{
						"name": "column2",
						"type": "INT32"
					},
					{
						"name": "column3",
						"type": "UTF8"
					},
					{
						"name": "column4",
						"type": "UTF8"
					},
					{
						"name": "column5",
						"type": "INT32"
					},
					{
						"name": "column6",
						"type": "UTF8"
					},
					{
						"name": "column7",
						"type": "DATE"
					},
					{
						"name": "column8",
						"type": "UTF8"
					},
					{
						"name": "column9",
						"type": "UTF8"
					},
					{
						"name": "column10",
						"type": "DATE"
					},
					{
						"name": "column11",
						"type": "BOOLEAN"
					},
					{
						"name": "column12",
						"type": "INT32"
					},
					{
						"name": "column13",
						"type": "INT32"
					},
					{
						"name": "column14",
						"type": "INT32"
					},
					{
						"name": "column15",
						"type": "UTF8"
					},
					{
						"name": "column16",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDBConnections')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "employee",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/employee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "uuyui"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1dataengine')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1428577553855580.0.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "accesscontrol"
					},
					"existingClusterId": "[parameters('AzureDatabricks1dataengine_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerall')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServerall_properties_typeProperties_server')]",
					"database": "[parameters('SqlServerall_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServerall_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "Password"
					}
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emptable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('emptable_properties_typeProperties_server')]",
					"database": "[parameters('emptable_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('emptable_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "Password"
					}
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerall",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerall')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emptable",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emptable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServercopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emptable",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emptable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emptable",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "column1",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "column2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "column3",
						"type": "nvarchar"
					},
					{
						"name": "column4",
						"type": "nvarchar"
					},
					{
						"name": "column5",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "column6",
						"type": "nvarchar"
					},
					{
						"name": "column7",
						"type": "date"
					},
					{
						"name": "column8",
						"type": "nvarchar"
					},
					{
						"name": "column9",
						"type": "nvarchar"
					},
					{
						"name": "column10",
						"type": "date"
					},
					{
						"name": "column11",
						"type": "bit"
					},
					{
						"name": "column12",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "column13",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "column14",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "column15",
						"type": "nvarchar"
					},
					{
						"name": "column16",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emptable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_all_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookforalltables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT s.name AS Schemanames,\nt.name as Tablenames\nfrom sys.tables t\nINNER JOIN sys.schemas s\nON t.schema_id=s.schema_id;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookforalltables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookforalltables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy each data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM [', item().Schemanames, '].[', item().Tablenames, ']')\n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServercopy",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquettable",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().Schemanames",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().Tablenames",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "bronzetosilver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/kelvinmutai992@gmail.com/DATA ENGINEERING Notebook 2024-10-07 10:13:24"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1dataengine",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "togoldnotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "bronzetosilver",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/kelvinmutai992@gmail.com/silver to gold Notebook 2024-10-08 16:39:34"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1dataengine",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-10-06T14:53:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1dataengine')]",
				"[concat(variables('factoryId'), '/datasets/SqlServercopy')]",
				"[concat(variables('factoryId'), '/datasets/Parquettable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineemployee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "emp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "employee_Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T18:36:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/emp')]",
				"[concat(variables('factoryId'), '/datasets/employee_Parquet1')]"
			]
		}
	]
}